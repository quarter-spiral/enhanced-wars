radio = require('radio')

@CAAT.DEBUG = true

exports class GameRenderer
  SCENE_OFFSET:
    x: 0
    y: 0

  CANVAS_DIMENSIONS =
    width: 960
    height: 640

  MAP_DIMENSIONS =
    width: 640
    height: 480

  constructor: (@game) ->
    self = @

    CAAT.Module.Initialization.TemplateWithSplash.init(
      # canvas will be 800x600 pixels
      CANVAS_DIMENSIONS.width, CANVAS_DIMENSIONS.height,

      # and will be added to the end of document. set an id of a canvas or div element
      'game',

      # keep splash at least this 2000 milliseconds
      <%= ENV['RACK_ENV'] == 'production' ? 2000 : 500 %>,

      # load these images and set them up for non splash scenes.
      # image elements must be of the form:
      # {id:'<unique string id>',    url:'<url to image>'}
      # No images can be set too.
      [],

      # onEndSplash callback function.
      # Create your scenes on this method.
      (director) ->
        self.preloader = new CAAT.Module.Preloader.Preloader()

        self.director = director

        # create an offset adjusting container
        scene = director.createScene()
        container = new CAAT.Foundation.ActorContainer()
        scene.addChild(container)
        scene.setFillStyle('white')
        container.setSize(scene.width, scene.height)
        # nobody knows where that 32x32 offset is coming from but we need to correct it
        container.setLocation(self.SCENE_OFFSET.x, self.SCENE_OFFSET.y)
        # set the container as a fake scene
        self.scene = container

        self.mapContainer = new CAAT.Foundation.ActorContainer().
            setSize(MAP_DIMENSIONS.width, MAP_DIMENSIONS.height).
            setClip(true)
        container.addChild(self.mapContainer)
        self.mapContainer.centerAt(CANVAS_DIMENSIONS.width / 2, CANVAS_DIMENSIONS.height / 2)

        self.renderers = {}
        MapRenderer  = require('MapRenderer')
        self.renderers.map = new MapRenderer(self.game, self, self.mapContainer)
        UnitRenderer  = require('UnitRenderer')
        self.renderers.unit = new UnitRenderer(self.game, self, self.mapContainer)

        InputController  = require('InputController')
        self.inputController = new InputController(self, self.mapContainer)

        ScrollHandler = require('ScrollHandler')
        self.scrollHandler = new ScrollHandler(self.renderers.map)

        UIRenderer  = require('UIRenderer')
        self.renderers.ui = new UIRenderer(self.game, self)

        self.preloader.load (images) ->
          director.setImagesCache(images)
          radio("ew/renderer/assets-loaded").broadcast(self, images)

        inputEnabledRenderers = [
          self.renderers.unit
          self.renderers.map
        ]

        radio("ew/input/click").subscribe (e) ->
          for renderer in inputEnabledRenderers
            return unless renderer.click(e)

        CAAT.loop(60)
      ,

      # use this image as splash. It wi ll cover all of director's area. optional.
      "/assets/splash.png"
    )

